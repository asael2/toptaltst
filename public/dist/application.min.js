"use strict";var ApplicationConfiguration=function(){var applicationModuleName="toptaltst",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","ngMap","ngRoute","ng-uploadcare"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("devprofiles"),ApplicationConfiguration.registerModule("users"),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("devprofiles").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Devprofiles","devprofiles","dropdown","/devprofiles(/create)?"),Menus.addSubMenuItem("topbar","devprofiles","List Devprofiles","devprofiles"),Menus.addSubMenuItem("topbar","devprofiles","New Devprofile","devprofiles/create")}]),angular.module("devprofiles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listDevprofiles",{url:"/devprofiles",templateUrl:"modules/devprofiles/views/list-devprofiles.client.view.html"}).state("tstview",{url:"/devprofiles/tstview",templateUrl:"modules/devprofiles/views/tst.view.html"}).state("createDevprofile",{url:"/devprofiles/create",templateUrl:"modules/devprofiles/views/create-devprofile.client.view.html"}).state("viewDevprofile",{url:"/devprofiles/:devprofileId",templateUrl:"modules/devprofiles/views/view-devprofile.client.view.html"}).state("editDevprofile",{url:"/devprofiles/:devprofileId/edit",templateUrl:"modules/devprofiles/views/edit-devprofile.client.view.html"})}]),angular.module("devprofiles").controller("DevprofilesController",["$scope","ngRoute","$stateParams","$location","Authentication","Devprofiles",function($scope,$stateParams,$location,Authentication,Devprofiles){$scope.authentication=Authentication,$scope.skills=[],$scope.portfolio={options:[{project:"",skills:""},{project:"",skills:""},{project:"",skills:""},{project:"",skills:""},{project:"",skills:""},{project:"",skills:""},{project:"",skills:""}]},$scope.experience={options:[{skill:"",period:""},{skill:"",period:""},{skill:"",period:""},{skill:"",period:""},{skill:"",period:""},{skill:"",period:""},{skill:"",period:""}]},$scope.onMeOneData={image:"",tagline:""},$scope.onMeTwoData={image:"",tagline:""},$scope.create=function(){var devprofile=new Devprofiles({name:this.name,location:this.location,devUbication:this.devUbication,ubiLatLng:this.ubiLatLng,mapLink:this.mapLink,languages:this.devLangs,skills:this.skills,profilePic:this.profileImg,portfolio:this.portfolio,amazing:this.amazing,experience:this.experience,inclients:this.inclients,note:this.note,available:this.available.label,environment:this.environment,mynote:this.mynote,onMeOneData:this.onMeOneData,onMeTwoData:this.onMeTwoData,sCode:this.sCode});devprofile.$save(function(response){$location.path("devprofiles/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(devprofile){if(devprofile){devprofile.$remove();for(var i in $scope.devprofiles)$scope.devprofiles[i]===devprofile&&$scope.devprofiles.splice(i,1)}else $scope.devprofile.$remove(function(){$location.path("devprofiles")})},$scope.update=function(){var devprofile=$scope.devprofile;devprofile.$update(function(){$location.path("devprofiles/"+devprofile._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.devprofiles=Devprofiles.query()},$scope.findOne=function(){$scope.devprofile=Devprofiles.get({devprofileId:$stateParams.devprofileId})},$scope.clickedName=function(){$scope.showInputName=!0,$scope.getKeyName=function(keyCode){"13"==keyCode&&($scope.showInputName=!1)}},$scope.setLocation=function(){$scope.showMapLocation=!1,$scope.blurLocation=function(){$scope.showInputLocation=!1},$scope.clickedLocation=function(){$scope.showInputLocation=!0,$scope.showMapLocation=!0,$scope.showStreetviewImg=!0,$scope.devLocation="";var input=document.getElementById("pac-input"),options={types:["(cities)"]},autocomplete=new google.maps.places.Autocomplete(input,options),initialOpts={center:new google.maps.LatLng(0,0),zoom:0,mapTypeControl:!1,navigationControl:!1,disableDefaultUI:!0,draggable:!0,streetViewControl:!1,mapTypeId:google.maps.MapTypeId.TERRAIN},map=new google.maps.Map(document.getElementById("map-canvas"),initialOpts);google.maps.event.addListener(autocomplete,"place_changed",function(){{var place=autocomplete.getPlace(),ubication=place.geometry.location,ubiLatLng=[];new google.maps.Marker({position:place.geometry.location,animation:google.maps.Animation.DROP,map:map})}map.setZoom(12),google.maps.event.trigger(map,"resize"),map.panTo(ubication),ubiLatLng.push(ubication.k,ubication.D),$scope.ubiLatLng=ubiLatLng,console.log(ubiLatLng),$scope.devUbication=ubication,$scope.loc_k=ubication.k,$scope.loc_D=ubication.D,$scope.devLocation=place.formatted_address,$scope.location=$scope.devLocation,$scope.showInputLocation=!1,$scope.mapLink=place.url})}},$scope.setLanguages=function(){$scope.showInputLang=!0,$scope.getKeyLang=function(keyCode){"13"==keyCode&&($scope.showInputLang=!1)}},$scope.skillGetKeyEsc=function(keyCode){"27"==keyCode&&($scope.showInputSkill=!1)},$scope.addSkill=function(devSkill,skillevel){var newSkill={skill:devSkill,level:skillevel};$scope.skills.push(newSkill),$scope.devSkill="",$scope.showInputSkill=!1},$scope.removeSkill=function(index){$scope.skills.splice(index,1),console.log($scope.skills)},$scope.onUCUploadComplete=function(image){console.log("main image: "+image),$scope.profileImg=image.cdnUrl,$scope.$apply()},$scope.onMeOne=function(image){console.log("one: "+image.cdnUrl),$scope.showOnMeOneLink=!1,$scope.showOnMeOneImg=!0,$scope.showOnMeOneInput=!0,$scope.myselfImg1=image.cdnUrl,$scope.$apply(),$scope.saveOnMeOne=function(){$scope.showOnMeOneInput=!1,$scope.showOnMeOneLegend=!0,$scope.onMeOneData.image=$scope.myselfImg1,$scope.onMeOneData.tagline=$scope.onMeOneLegend,console.log($scope.onMeOneData)},$scope.getKeyOnMe1=function(keyCode){"13"==keyCode&&$scope.saveOnMeOne()},$scope.editOnMeOne=function(){$scope.showOnMeOneInput=!0,$scope.showOnMeOneLegend=!1}},$scope.onMeTwo=function(image){console.log("two: "+image.cdnUrl),$scope.showOnMeTwoLink=!1,$scope.showOnMeTwoImg=!0,$scope.showOnMeTwoInput=!0,$scope.myselfImg2=image.cdnUrl,$scope.$apply(),$scope.saveOnMeTwo=function(){$scope.showOnMeTwoInput=!1,$scope.showOnMeTwoLegend=!0,$scope.onMeTwoData.image=$scope.myselfImg2,$scope.onMeTwoData.tagline=$scope.onMeTwoLegend},$scope.getKeyOnMe2=function(keyCode){"13"==keyCode&&$scope.saveOnMeTwo()},$scope.editOnMeTwo=function(){$scope.showOnMeTwoInput=!0,$scope.showOnMeTwoLegend=!1}},$scope.sCode=function(image){console.log("sCode: "+image.cdnUrl),$scope.showSCodeLink=!1,$scope.sCode=image.cdnUrl,$scope.showSCodeImg=!0,$scope.$apply()},$scope.setPortfolio=function(){$scope.showPortfoliosLink=!1,$scope.showPortfoliosInput=!0,$scope.portfolioClass="black-bg",$scope.savePortfolio=function(){""==$scope.portfolio.options[0].project?($scope.showPortfoliosLink=!0,$scope.showPortfolioList=!1,$scope.portfolioClass="white-bg"):($scope.showPortfoliosInput=!1,$scope.showPortfolioList=!0,$scope.portfolioClass="white-bg")},$scope.editPortfolio=function(){$scope.showPortfoliosInput=!0,$scope.showPortfolioList=!1,$scope.portfolioClass="black-bg"}},$scope.setExperience=function(){$scope.showExperiencesLink=!1,$scope.showExperiencesInput=!0,$scope.experienceClass="black-bg",$scope.saveExperience=function(){""==$scope.experience.options[0].skill?(console.log("nada"),$scope.showExperiencesLink=!0,$scope.showExperienceList=!1,$scope.experienceClass="white-bg"):($scope.showExperiencesInput=!1,$scope.showExperienceList=!0,$scope.experienceClass="white-bg")},$scope.editExperience=function(){$scope.showExperiencesInput=!0,$scope.showExperienceList=!1,$scope.experienceClass="black-bg"}},$scope.setAmazing=function(){$scope.showAmazingTxt=!1,$scope.showAmazingLink=!1,$scope.showAmazingInput=!0,$scope.amazingClass="black-bg",$scope.saveAmazing=function(){$scope.amazing?($scope.showAmazingTxt=!0,$scope.showAmazingInput=!1,$scope.amazingClass="white-bg"):($scope.showAmazingLink=!0,$scope.amazingClass="white-bg")},$scope.editAmazing=function(){$scope.showAmazingInput=!0,$scope.showAmazingTxt=!1,$scope.amazingClass="black-bg"}},$scope.setInclients=function(){$scope.showInclientsTxt=!1,$scope.showInclientsLink=!1,$scope.showInclientsInput=!0,$scope.inclientsClass="black-bg",$scope.saveInclients=function(){$scope.inclients?($scope.showInclientsTxt=!0,$scope.showInclientsInput=!1,$scope.inclientsClass="white-bg"):($scope.showInclientsLink=!0,$scope.inclientsClass="white-bg")},$scope.editInclients=function(){$scope.showInclientsInput=!0,$scope.showInclientsTxt=!1,$scope.inclientsClass="black-bg"}},$scope.setNote=function(){$scope.showNoteTxt=!1,$scope.showNoteLink=!1,$scope.showNoteInput=!0,$scope.noteClass="black-bg",$scope.saveNote=function(){$scope.note?($scope.showNoteTxt=!0,$scope.showNoteInput=!1,$scope.noteClass="white-bg"):($scope.showNoteLink=!0,$scope.noteClass="white-bg")},$scope.editNote=function(){$scope.showNoteInput=!0,$scope.showNoteTxt=!1,$scope.noteClass="black-bg"}},$scope.setMyNote=function(){$scope.showMyNoteTxt=!1,$scope.showMyNoteLink=!1,$scope.showMyNoteInput=!0,$scope.mynoteClass="black-bg",$scope.saveMyNote=function(){$scope.mynote?($scope.showMyNoteTxt=!0,$scope.showMyNoteInput=!1,$scope.mynoteClass="white-bg"):($scope.showMyNoteLink=!0,$scope.mynoteClass="white-bg")},$scope.editMyNote=function(){$scope.showMyNoteInput=!0,$scope.showMyNoteTxt=!1,$scope.mynoteClass="black-bg"}},$scope.setEnvironment=function(){$scope.showEnvironmentTxt=!1,$scope.showEnvironmentLink=!1,$scope.showEnvironmentInput=!0,$scope.environmentClass="black-bg",$scope.saveEnvironment=function(){$scope.environment?($scope.showEnvironmentTxt=!0,$scope.showEnvironmentInput=!1,$scope.environmentClass="white-bg"):($scope.showEnvironmentLink=!0,$scope.environmentClass="white-bg")},$scope.editEnvironment=function(){$scope.showEnvironmentInput=!0,$scope.showEnvironmentTxt=!1,$scope.environmentClass="black-bg"}},$scope.availability=function(){$scope.avOptions=[{label:"Hourly",value:1},{label:"Half-time",value:2},{label:"Full-time",value:3}],$scope.available=$scope.avOptions[1]}}]),angular.module("devprofiles").factory("Devprofiles",["$resource",function($resource){return $resource("devprofiles/:devprofileId",{devprofileId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);